{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"HomelabOS Welcome to HomelabOS version 0.3! Your very own offline-first open-source data-center! HomelabOS is a collection of various separate services. You can find more information about each in the menu on the left. Getting Help If you are having problems you can file an issue on GitLab .","title":"Home"},{"location":"#homelabos","text":"Welcome to HomelabOS version 0.3! Your very own offline-first open-source data-center! HomelabOS is a collection of various separate services. You can find more information about each in the menu on the left.","title":"HomelabOS"},{"location":"#getting-help","text":"If you are having problems you can file an issue on GitLab .","title":"Getting Help"},{"location":"setup/backups/","text":"HomelabOS Backups HomelabOS automatically backs itself in a smart, incremental, encrypted way to any S3 compatible storage provider, using Restic and Minio . This is in addition to and separate from the Backup service included within HomelabOS, which backs up your personal computers to the HomelabOS servers. Get access to an S3 Bucket Ideally you want your backups to be offsite, so really the best case scenario would be to find a friend also running HomelabOS, and trade S3 access with them. Or you could pay Amazon and use their S3 service, if you're into that sort of thing. Use your own S3 This method is not recommended as it is backing up to yourself which is not very useful. The usefulness here comes from Restic's snapshotting. So while this won't give you an offsite backup, it will still provide timed snapshots to access old versions of files. View your logs for the Minio service (homelabos_minio_1) and copy the AccessKey and SecretKeys out of the logs. Put these into your host_vars/myserver file under the s3_access_key and s3_secret_key variables. Now login to Minio at http://minio.{{ domain }}/ with the same access and secret key values and create a bucket called restic-backups . Finally run make update to copy your new settings up to your HomelabOS server. Of course keep in mind when self hosting your own S3, you likely want to keep good backups of the S3 data files as well. Configure the Backup Service Set your S3 keys in host_vars/myserver . Once these are set, HomelabOS will back up all it's core data every night at 4 AM. Restoring Backups Let's say your machine gets wiped, or you want to migrate to a new machine. To restore your most recent backup, simply run make restore . Then proceed with the normal install step of running make and boom, you have all your data back with a fully working HomelabOS setup. Alternatively you can work directly with the Restic backups through it's Docker shell. Using either Portainer or your server's CLI, once you gain access to the Restic shell, you can run commands like restic snapshots to list all your snapshots.","title":"Backups"},{"location":"setup/backups/#homelabos-backups","text":"HomelabOS automatically backs itself in a smart, incremental, encrypted way to any S3 compatible storage provider, using Restic and Minio . This is in addition to and separate from the Backup service included within HomelabOS, which backs up your personal computers to the HomelabOS servers.","title":"HomelabOS Backups"},{"location":"setup/backups/#get-access-to-an-s3-bucket","text":"Ideally you want your backups to be offsite, so really the best case scenario would be to find a friend also running HomelabOS, and trade S3 access with them. Or you could pay Amazon and use their S3 service, if you're into that sort of thing.","title":"Get access to an S3 Bucket"},{"location":"setup/backups/#use-your-own-s3","text":"This method is not recommended as it is backing up to yourself which is not very useful. The usefulness here comes from Restic's snapshotting. So while this won't give you an offsite backup, it will still provide timed snapshots to access old versions of files. View your logs for the Minio service (homelabos_minio_1) and copy the AccessKey and SecretKeys out of the logs. Put these into your host_vars/myserver file under the s3_access_key and s3_secret_key variables. Now login to Minio at http://minio.{{ domain }}/ with the same access and secret key values and create a bucket called restic-backups . Finally run make update to copy your new settings up to your HomelabOS server. Of course keep in mind when self hosting your own S3, you likely want to keep good backups of the S3 data files as well.","title":"Use your own S3"},{"location":"setup/backups/#configure-the-backup-service","text":"Set your S3 keys in host_vars/myserver . Once these are set, HomelabOS will back up all it's core data every night at 4 AM.","title":"Configure the Backup Service"},{"location":"setup/backups/#restoring-backups","text":"Let's say your machine gets wiped, or you want to migrate to a new machine. To restore your most recent backup, simply run make restore . Then proceed with the normal install step of running make and boom, you have all your data back with a fully working HomelabOS setup. Alternatively you can work directly with the Restic backups through it's Docker shell. Using either Portainer or your server's CLI, once you gain access to the Restic shell, you can run commands like restic snapshots to list all your snapshots.","title":"Restoring Backups"},{"location":"setup/gettingstarted/","text":"Getting Started Alright once you are all setup and ready to go you should be able to load Organizr at http://{{ domain }}/ . If you see { domain } in the link above, you are either viewing these docs on the hosted GitLab pages and not actually through HomelabOS, or something is configured incorrectly. Using Organizr You can click the Settings link, then Edit Tabs to be able to add links to all the various HomelabOS services. In the very near future, HomelabOS will provision these tab links for you automatically. The URLs for all the services can be found in their individual documentation section. HTTPS via LetsEncrypt HomelabOS will use Traefik's built in LetsEncrypt integration to automatically generate SSL certificates for your various services. If initially some of the certificates don't appear valid, you have likely run into LetsEncrypt rate limits . Unfortunately the only fix we have for that right now is 'wait a week'.","title":"Getting Started"},{"location":"setup/gettingstarted/#getting-started","text":"Alright once you are all setup and ready to go you should be able to load Organizr at http://{{ domain }}/ . If you see { domain } in the link above, you are either viewing these docs on the hosted GitLab pages and not actually through HomelabOS, or something is configured incorrectly.","title":"Getting Started"},{"location":"setup/gettingstarted/#using-organizr","text":"You can click the Settings link, then Edit Tabs to be able to add links to all the various HomelabOS services. In the very near future, HomelabOS will provision these tab links for you automatically. The URLs for all the services can be found in their individual documentation section.","title":"Using Organizr"},{"location":"setup/gettingstarted/#https-via-letsencrypt","text":"HomelabOS will use Traefik's built in LetsEncrypt integration to automatically generate SSL certificates for your various services. If initially some of the certificates don't appear valid, you have likely run into LetsEncrypt rate limits . Unfortunately the only fix we have for that right now is 'wait a week'.","title":"HTTPS via LetsEncrypt"},{"location":"setup/installation/","text":"Installation Download the latest version from GitLab . Make sure you have Ansible 2.5+ installed on your computer. Ensure you can access your server with a local IP through passwordless SSH and your user has passwordless sudo . From inside the HomelabOS folder execute the terminal command make setup to configure your server settings. Once that is done, you can run make to have HomelabOS install itself. To configure additional services, look at the options available in group_vars/all and override them in host_vars/myserver . You can always change settings by hand in host_vars/myserver and re-run make again to update the server with your new settings. Network Configuration It is recommended to register an actual domain to point at your Homelab, but if you can't or would prefer not to, you can use HomelabOS fully inside your network. Simply make up a domain that ends in .local and enter that as your domain in host_vars/myserver . When HomelabOS make command completes, it creates a file on the server at /var/homelabos/homelabos_hosts . You can take the contents of this file and create local DNS overrides using it. All your requests should complete as expected. NAS Network Area Storage Configuration It is a good idea to keep your files as a whole, media, documents, etc., on a Network Area Storage device or NAS. For a typical HomelabOS setup you will want at least the following directories inside your NAS: Backups Music Movies TV Downloads Documents All you have to do is enter your NAS network path, username and password into your host_vars/myserver file. You can find the template in host_vars/all in the # NAS Config section. It should look something like this, depending on your setup: nas_path: //192.168.1.1/Mynas nas_user: guest nas_pass: nas_workgroup: WORKGROUP This NAS resource will be mounted under /mnt/nas in the various containers that would benefit from access. Assuming you have created the folders above, for Emby for example you could point it to /mnt/nas/TV and /mnt/nas/Movies while Paperless would point at /mnt/nas/Documents .","title":"Installation"},{"location":"setup/installation/#installation","text":"Download the latest version from GitLab . Make sure you have Ansible 2.5+ installed on your computer. Ensure you can access your server with a local IP through passwordless SSH and your user has passwordless sudo . From inside the HomelabOS folder execute the terminal command make setup to configure your server settings. Once that is done, you can run make to have HomelabOS install itself. To configure additional services, look at the options available in group_vars/all and override them in host_vars/myserver . You can always change settings by hand in host_vars/myserver and re-run make again to update the server with your new settings.","title":"Installation"},{"location":"setup/installation/#network-configuration","text":"It is recommended to register an actual domain to point at your Homelab, but if you can't or would prefer not to, you can use HomelabOS fully inside your network. Simply make up a domain that ends in .local and enter that as your domain in host_vars/myserver . When HomelabOS make command completes, it creates a file on the server at /var/homelabos/homelabos_hosts . You can take the contents of this file and create local DNS overrides using it. All your requests should complete as expected.","title":"Network Configuration"},{"location":"setup/installation/#nas-network-area-storage-configuration","text":"It is a good idea to keep your files as a whole, media, documents, etc., on a Network Area Storage device or NAS. For a typical HomelabOS setup you will want at least the following directories inside your NAS: Backups Music Movies TV Downloads Documents All you have to do is enter your NAS network path, username and password into your host_vars/myserver file. You can find the template in host_vars/all in the # NAS Config section. It should look something like this, depending on your setup: nas_path: //192.168.1.1/Mynas nas_user: guest nas_pass: nas_workgroup: WORKGROUP This NAS resource will be mounted under /mnt/nas in the various containers that would benefit from access. Assuming you have created the folders above, for Emby for example you could point it to /mnt/nas/TV and /mnt/nas/Movies while Paperless would point at /mnt/nas/Documents .","title":"NAS Network Area Storage Configuration"},{"location":"setup/smtp/","text":"SMTP In order for your applications to be able to send out emails, you need an SMTP server. A nice free one is Mailgun . Create an account, and follow their steps to register your domain. Once that is completed, you can plug the settings they provide into Nextcloud and other apps that send emails.","title":"SMTP"},{"location":"setup/smtp/#smtp","text":"In order for your applications to be able to send out emails, you need an SMTP server. A nice free one is Mailgun . Create an account, and follow their steps to register your domain. Once that is completed, you can plug the settings they provide into Nextcloud and other apps that send emails.","title":"SMTP"},{"location":"setup/tinc/","text":"Tinc HomelabOS can optionally use Tinc to configure a cloud based bastion server, which will route to your HomelabOS instance without needing to forward ports on your home router. This is desirable for three reasons. Less configuration - No need to configure your routers or firewalls, no port forwarding to mess with. Enhanced security - Your home IP address will not be exposed to the internet via DNS Email - Most ISPs block the ports necessary for email, this circumvents that Setup First you need a cloud server through a provider such as AWS or Digital Ocean. Copy the group_vars/tinc file to host_vars/tincserver . Fill out all the required fields. The ansible ssh user should have passwordless SSH and Sudo just like the HomelabOS server. Now run make update as normal, and HomelabOS will take care of everything else. Now point your domain name to your cloud server's IP address rather than your home IP address, and everything should be happy!","title":"Cloud Bastion Server via Tinc"},{"location":"setup/tinc/#tinc","text":"HomelabOS can optionally use Tinc to configure a cloud based bastion server, which will route to your HomelabOS instance without needing to forward ports on your home router. This is desirable for three reasons. Less configuration - No need to configure your routers or firewalls, no port forwarding to mess with. Enhanced security - Your home IP address will not be exposed to the internet via DNS Email - Most ISPs block the ports necessary for email, this circumvents that","title":"Tinc"},{"location":"setup/tinc/#setup","text":"First you need a cloud server through a provider such as AWS or Digital Ocean. Copy the group_vars/tinc file to host_vars/tincserver . Fill out all the required fields. The ansible ssh user should have passwordless SSH and Sudo just like the HomelabOS server. Now run make update as normal, and HomelabOS will take care of everything else. Now point your domain name to your cloud server's IP address rather than your home IP address, and everything should be happy!","title":"Setup"},{"location":"setup/tor/","text":"Tor If you don't have a domain, or your DNS fails you, or suddenly some ports aren't mapped correctly somewhere in your network, and you can't access your services remotely, fear not! Tor is here to save the day. Install Tor Download Tor from the Tor Project website. Web Access Each page of the Software documentation section has a Tor URL beneath the normal URL. SSH Access Make sure you have a working torify installation on your machine (not the server). Run torify curl ifconfig.me to verify you can connect to Tor with torify . Now append the following lines to your ~/.ssh/config file: Host *.onion ProxyCommand /usr/bin/nc -xlocalhost:9150 -X5 %h %p Once that is done, you can ssh to your server with torify ssh {{ ansible_user }}@{{ tor_ssh_domain }}","title":"Tor Onion Services"},{"location":"setup/tor/#tor","text":"If you don't have a domain, or your DNS fails you, or suddenly some ports aren't mapped correctly somewhere in your network, and you can't access your services remotely, fear not! Tor is here to save the day.","title":"Tor"},{"location":"setup/tor/#install-tor","text":"Download Tor from the Tor Project website.","title":"Install Tor"},{"location":"setup/tor/#web-access","text":"Each page of the Software documentation section has a Tor URL beneath the normal URL.","title":"Web Access"},{"location":"setup/tor/#ssh-access","text":"Make sure you have a working torify installation on your machine (not the server). Run torify curl ifconfig.me to verify you can connect to Tor with torify . Now append the following lines to your ~/.ssh/config file: Host *.onion ProxyCommand /usr/bin/nc -xlocalhost:9150 -X5 %h %p Once that is done, you can ssh to your server with torify ssh {{ ansible_user }}@{{ tor_ssh_domain }}","title":"SSH Access"},{"location":"setup/vpn/","text":"VPN Setup This bit is not quite automated yet, so you'll have to run the following commands on the server by hand. # Create config docker run -v /var/homelabos/openvpn:/etc/openvpn --rm kylemanna/openvpn ovpn_genconfig -u udp://vpn.{{ domain }}:1194 # Create PKI docker run -v /var/homelabos/openvpn:/etc/openvpn --rm -it kylemanna/openvpn ovpn_initpki # Create a client (repeat as needed) docker run -v /var/homelabos/openvpn:/etc/openvpn --rm -it kylemanna/openvpn easyrsa build-client-full USERNAME nopass # Get client connection file (repeat as needed) docker run -v /var/homelabos/openvpn:/etc/openvpn --rm kylemanna/openvpn ovpn_getclient USERNAME USERNAME.ovpn Once you run those 4 lines you will have a .ovpn file for each user. Simply copy them off of the server to your machine, and distribute as needed.","title":"VPN Setup"},{"location":"setup/vpn/#vpn-setup","text":"This bit is not quite automated yet, so you'll have to run the following commands on the server by hand. # Create config docker run -v /var/homelabos/openvpn:/etc/openvpn --rm kylemanna/openvpn ovpn_genconfig -u udp://vpn.{{ domain }}:1194 # Create PKI docker run -v /var/homelabos/openvpn:/etc/openvpn --rm -it kylemanna/openvpn ovpn_initpki # Create a client (repeat as needed) docker run -v /var/homelabos/openvpn:/etc/openvpn --rm -it kylemanna/openvpn easyrsa build-client-full USERNAME nopass # Get client connection file (repeat as needed) docker run -v /var/homelabos/openvpn:/etc/openvpn --rm kylemanna/openvpn ovpn_getclient USERNAME USERNAME.ovpn Once you run those 4 lines you will have a .ovpn file for each user. Simply copy them off of the server to your machine, and distribute as needed.","title":"VPN Setup"},{"location":"software/applehealth/","text":"Automated Apple Health Import HomelabOS supports automatically (kind of) importing of your data from Apple Health. The non-automatic part is you have to manually create an Export from the Health app on your phone. Once you upload your export to your NextCloud instance, the Apple Health cron task will pick it up within the next hour, and put all the data into InfluxDB . Now you can create nice dashboards in Grafana to visualize and inspect your Health data. Configuring You need to set the NextCloud username that you want to import Health Data from in your host_vars/myserver file. This value defaults to admin the default username created at startup by NextCloud. Exporting Make sure you have NextCloud configured on your Apple device. On your Apple device open the Health app. Click the Today tab, then click the profile icon in the top right of the screen. Now click Export Health Data . Once the export completes, save it to NextCloud. Click Upload with the default settings. It should save to your Files folder with the name export.zip . Now in under an hour you should be able to see your data in Influx via Grafana. Debugging You can always open up Portainer and view the Logs of the homelabos_apple_health_influx_1 container to see if things are working or not. Access There is no direct access to this service, you can visualize the data through Grafana.","title":"Apple Health"},{"location":"software/applehealth/#automated-apple-health-import","text":"HomelabOS supports automatically (kind of) importing of your data from Apple Health. The non-automatic part is you have to manually create an Export from the Health app on your phone. Once you upload your export to your NextCloud instance, the Apple Health cron task will pick it up within the next hour, and put all the data into InfluxDB . Now you can create nice dashboards in Grafana to visualize and inspect your Health data.","title":"Automated Apple Health Import"},{"location":"software/applehealth/#configuring","text":"You need to set the NextCloud username that you want to import Health Data from in your host_vars/myserver file. This value defaults to admin the default username created at startup by NextCloud.","title":"Configuring"},{"location":"software/applehealth/#exporting","text":"Make sure you have NextCloud configured on your Apple device. On your Apple device open the Health app. Click the Today tab, then click the profile icon in the top right of the screen. Now click Export Health Data . Once the export completes, save it to NextCloud. Click Upload with the default settings. It should save to your Files folder with the name export.zip . Now in under an hour you should be able to see your data in Influx via Grafana.","title":"Exporting"},{"location":"software/applehealth/#debugging","text":"You can always open up Portainer and view the Logs of the homelabos_apple_health_influx_1 container to see if things are working or not.","title":"Debugging"},{"location":"software/applehealth/#access","text":"There is no direct access to this service, you can visualize the data through Grafana.","title":"Access"},{"location":"software/bitwarden/","text":"Bitwarden Bitwarden is an open source password manager. HomelabOS utilizes an Open Source clone of the Bitwarden API server, bitwarden_rs . This is primarily due to performance and complexity reasons. bitwarden_rs requires just one Docker container, whereas the official Bitwarden install requires something like six different containers. Access It is available at https://warden.{{ domain }}/ or http://warden.{{ domain }}/ It is also available via Tor at http://warden.{{ tor_domain }}/","title":"Bitwarden"},{"location":"software/bitwarden/#bitwarden","text":"Bitwarden is an open source password manager. HomelabOS utilizes an Open Source clone of the Bitwarden API server, bitwarden_rs . This is primarily due to performance and complexity reasons. bitwarden_rs requires just one Docker container, whereas the official Bitwarden install requires something like six different containers.","title":"Bitwarden"},{"location":"software/bitwarden/#access","text":"It is available at https://warden.{{ domain }}/ or http://warden.{{ domain }}/ It is also available via Tor at http://warden.{{ tor_domain }}/","title":"Access"},{"location":"software/convos/","text":"Convos Convos is an always on IRC client. Login to your IRC network of choice, and Convos will stay online 24/7 for you, so you can always see any messages. Access It is available at https://irc.{{ domain }}/ or http://irc.{{ domain }}/ It is also available via Tor at http://irc.{{ tor_domain }}/","title":"Convos"},{"location":"software/convos/#convos","text":"Convos is an always on IRC client. Login to your IRC network of choice, and Convos will stay online 24/7 for you, so you can always see any messages.","title":"Convos"},{"location":"software/convos/#access","text":"It is available at https://irc.{{ domain }}/ or http://irc.{{ domain }}/ It is also available via Tor at http://irc.{{ tor_domain }}/","title":"Access"},{"location":"software/darksky/","text":"Darksky darksky-influxdb pulls in weather data for your location every 2 minutes from Darksky and saves it to your InfluxDB instance. You need to get an API key first from Darksky Access There is no direct access to it, but you can create graphs in Grafana to visualize it.","title":"Darksky"},{"location":"software/darksky/#darksky","text":"darksky-influxdb pulls in weather data for your location every 2 minutes from Darksky and saves it to your InfluxDB instance. You need to get an API key first from Darksky","title":"Darksky"},{"location":"software/darksky/#access","text":"There is no direct access to it, but you can create graphs in Grafana to visualize it.","title":"Access"},{"location":"software/dasher/","text":"Dasher Dasher provides support for triggering things when you press one of those free Amazon Dash buttons. Follow the directions on how to find your Dash button's MAC address . Then plug that MAC address into homelabos/templates/dasher.config.json . Edit the URL, headers and body as needed for your use case. The default example shown causes Home Assistant to toggle the Living Room lights. Access No direct access, but like all the images you can tail the logs in Portainer","title":"Dasher"},{"location":"software/dasher/#dasher","text":"Dasher provides support for triggering things when you press one of those free Amazon Dash buttons. Follow the directions on how to find your Dash button's MAC address . Then plug that MAC address into homelabos/templates/dasher.config.json . Edit the URL, headers and body as needed for your use case. The default example shown causes Home Assistant to toggle the Living Room lights.","title":"Dasher"},{"location":"software/dasher/#access","text":"No direct access, but like all the images you can tail the logs in Portainer","title":"Access"},{"location":"software/emby/","text":"Emby Emby is a media server. Just point it at your NAS collections of Movies and TV and you're off to the races. Access It is available at https://emby.{{ domain }}/ or http://emby.{{ domain }}/ It is also available via Tor at http://emby.{{ tor_domain }}/","title":"Emby"},{"location":"software/emby/#emby","text":"Emby is a media server. Just point it at your NAS collections of Movies and TV and you're off to the races.","title":"Emby"},{"location":"software/emby/#access","text":"It is available at https://emby.{{ domain }}/ or http://emby.{{ domain }}/ It is also available via Tor at http://emby.{{ tor_domain }}/","title":"Access"},{"location":"software/firefly/","text":"Firefly III Firefly III is a money management app. Access It is available at https://money.{{ domain }}/ or http://money.{{ domain }}/ It is also available via Tor at http://money.{{ tor_domain }}/","title":"Firefly III"},{"location":"software/firefly/#firefly-iii","text":"Firefly III is a money management app.","title":"Firefly III"},{"location":"software/firefly/#access","text":"It is available at https://money.{{ domain }}/ or http://money.{{ domain }}/ It is also available via Tor at http://money.{{ tor_domain }}/","title":"Access"},{"location":"software/gitea/","text":"Gitea Gitea is a Git hosting platform. Access It is available at https://git.{{ domain }}/ or http://git.{{ domain }}/ It is also available via Tor at http://git.{{ tor_domain }}/","title":"Gitea"},{"location":"software/gitea/#gitea","text":"Gitea is a Git hosting platform.","title":"Gitea"},{"location":"software/gitea/#access","text":"It is available at https://git.{{ domain }}/ or http://git.{{ domain }}/ It is also available via Tor at http://git.{{ tor_domain }}/","title":"Access"},{"location":"software/grafana/","text":"Grafana Grafana is a Time Series Database graphing application. You can use it to visualize the Weather data imported by influxdb_darksky , power, activity, and other data from Home Assistant , and general server information via Telegraf. Grafana comes configured with a Dashboard for you out of the box. You can login with the default user and pass you setup for HomelabOS. Access It is available at https://grafana.{{ domain }}/ or http://grafana.{{ domain }}/ It is also available via Tor at http://grafana.{{ tor_domain }}/","title":"Grafana"},{"location":"software/grafana/#grafana","text":"Grafana is a Time Series Database graphing application. You can use it to visualize the Weather data imported by influxdb_darksky , power, activity, and other data from Home Assistant , and general server information via Telegraf. Grafana comes configured with a Dashboard for you out of the box. You can login with the default user and pass you setup for HomelabOS.","title":"Grafana"},{"location":"software/grafana/#access","text":"It is available at https://grafana.{{ domain }}/ or http://grafana.{{ domain }}/ It is also available via Tor at http://grafana.{{ tor_domain }}/","title":"Access"},{"location":"software/homeassistant/","text":"Home Assistant Home Assistant can automate just about any part of your home. Access It is available at https://homeassistant.{{ domain }}/ or http://homeassistant.{{ domain }}/ It is also available via Tor at http://homeassistant.{{ tor_domain }}/","title":"Home Assistant"},{"location":"software/homeassistant/#home-assistant","text":"Home Assistant can automate just about any part of your home.","title":"Home Assistant"},{"location":"software/homeassistant/#access","text":"It is available at https://homeassistant.{{ domain }}/ or http://homeassistant.{{ domain }}/ It is also available via Tor at http://homeassistant.{{ tor_domain }}/","title":"Access"},{"location":"software/influxdb/","text":"InfluxDB InfluxDB is the Time Series Database that Darksky writes to and Grafana can visualize. It can also take data from Home Assistant and many other sources. Access There is no direct access, but you can access it in Grafana by creating a new InfluxDB data source pointing at host influxdb .","title":"InfluxDB"},{"location":"software/influxdb/#influxdb","text":"InfluxDB is the Time Series Database that Darksky writes to and Grafana can visualize. It can also take data from Home Assistant and many other sources.","title":"InfluxDB"},{"location":"software/influxdb/#access","text":"There is no direct access, but you can access it in Grafana by creating a new InfluxDB data source pointing at host influxdb .","title":"Access"},{"location":"software/jackett/","text":"Jackett Jackett provides API Support for your favorite torrent trackers. Configuration It is important to secure Jackett! Access the Jackett dashboard with the links below, scroll down to the Jackett Configuration section, and set a value for Admin Password . Hit Set Password and you should be good to go. Set up some indexers in the interface, and now in Sonarr and Radarr you can setup the link to Jackett. Access The dashboard is available at https://jackett.{{ domain }}/ or http://jackett.{{ domain }}/ It is also available via Tor at http://jackett.{{ tor_domain }}/","title":"Jackett"},{"location":"software/jackett/#jackett","text":"Jackett provides API Support for your favorite torrent trackers.","title":"Jackett"},{"location":"software/jackett/#configuration","text":"It is important to secure Jackett! Access the Jackett dashboard with the links below, scroll down to the Jackett Configuration section, and set a value for Admin Password . Hit Set Password and you should be good to go. Set up some indexers in the interface, and now in Sonarr and Radarr you can setup the link to Jackett.","title":"Configuration"},{"location":"software/jackett/#access","text":"The dashboard is available at https://jackett.{{ domain }}/ or http://jackett.{{ domain }}/ It is also available via Tor at http://jackett.{{ tor_domain }}/","title":"Access"},{"location":"software/kibitzr/","text":"Kibitzr Kibitzr acts as a replacement for IFTTT. Setup Create your kibitzr.yml and kibitzr-creds.yml in roles/homelabos/files/ . You can find examples on the Kibitzr website .","title":"Kibitzr"},{"location":"software/kibitzr/#kibitzr","text":"Kibitzr acts as a replacement for IFTTT.","title":"Kibitzr"},{"location":"software/kibitzr/#setup","text":"Create your kibitzr.yml and kibitzr-creds.yml in roles/homelabos/files/ . You can find examples on the Kibitzr website .","title":"Setup"},{"location":"software/matomo/","text":"Matomo Setup During the setup wizard, your Database host should be db and the database name, user, and password, all matomo . Access It is available via https://matomo.{{ domain }}/ or http://matomo.{{ domain }}/ . It is also available via Tor at http://matomo.{{ tor_domain }}/","title":"Matomo"},{"location":"software/matomo/#matomo","text":"","title":"Matomo"},{"location":"software/matomo/#setup","text":"During the setup wizard, your Database host should be db and the database name, user, and password, all matomo .","title":"Setup"},{"location":"software/matomo/#access","text":"It is available via https://matomo.{{ domain }}/ or http://matomo.{{ domain }}/ . It is also available via Tor at http://matomo.{{ tor_domain }}/","title":"Access"},{"location":"software/miniflux/","text":"Miniflux Miniflux is a minimalist and opinionated feed reader. Configuration Login to your server and run the following commands to configure Miniflux the first time. Execute docker exec -ti homelabos_miniflux_1 /usr/local/bin/miniflux -migrate Then docker exec -ti homelabos_miniflux_1 /usr/local/bin/miniflux -create-admin Access The dashboard is available at https://rss.{{ domain }}/ or http://rss.{{ domain }}/ It is also available via Tor at http://rss.{{ tor_domain }}/","title":"Miniflux"},{"location":"software/miniflux/#miniflux","text":"Miniflux is a minimalist and opinionated feed reader.","title":"Miniflux"},{"location":"software/miniflux/#configuration","text":"Login to your server and run the following commands to configure Miniflux the first time. Execute docker exec -ti homelabos_miniflux_1 /usr/local/bin/miniflux -migrate Then docker exec -ti homelabos_miniflux_1 /usr/local/bin/miniflux -create-admin","title":"Configuration"},{"location":"software/miniflux/#access","text":"The dashboard is available at https://rss.{{ domain }}/ or http://rss.{{ domain }}/ It is also available via Tor at http://rss.{{ tor_domain }}/","title":"Access"},{"location":"software/minio/","text":"Minio Minio is an S3 storage utility. Configuration Refer to the Backup Guide for configuration details. Access The dashboard is available at https://minio.{{ domain }}/ or http://minio.{{ domain }}/ It is also available via Tor at http://minio.{{ tor_domain }}/","title":"Minio"},{"location":"software/minio/#minio","text":"Minio is an S3 storage utility.","title":"Minio"},{"location":"software/minio/#configuration","text":"Refer to the Backup Guide for configuration details.","title":"Configuration"},{"location":"software/minio/#access","text":"The dashboard is available at https://minio.{{ domain }}/ or http://minio.{{ domain }}/ It is also available via Tor at http://minio.{{ tor_domain }}/","title":"Access"},{"location":"software/monica/","text":"Monica Monica is an open source personal CRM. Configuration This requires some manual setup unfortunately. First make sure all the migrations have completed and that accessing the Monica URL below renders a login page. Once that is done, login to your server and stop the services with systemctl stop homelabos Spin up a monica specific app by CDing into the HomelabOS Docker folder cd /var/homelabos/docker and then running docker-compose run monicahq shell Once you are inside the Docker container, run php artisan setup:production then after that's done exit the container. Now you should spin down the DB container left running with docker stop docker_monicahq_db_1 . NOW you should be able to access the Monica URL below again, and be presented with a registration page for the first account. Access Monica is available at https://monica.{{ domain }}/ or http://monica.{{ domain }}/ It is also available via Tor at http://monica.{{ tor_domain }}/","title":"Monica"},{"location":"software/monica/#monica","text":"Monica is an open source personal CRM.","title":"Monica"},{"location":"software/monica/#configuration","text":"This requires some manual setup unfortunately. First make sure all the migrations have completed and that accessing the Monica URL below renders a login page. Once that is done, login to your server and stop the services with systemctl stop homelabos Spin up a monica specific app by CDing into the HomelabOS Docker folder cd /var/homelabos/docker and then running docker-compose run monicahq shell Once you are inside the Docker container, run php artisan setup:production then after that's done exit the container. Now you should spin down the DB container left running with docker stop docker_monicahq_db_1 . NOW you should be able to access the Monica URL below again, and be presented with a registration page for the first account.","title":"Configuration"},{"location":"software/monica/#access","text":"Monica is available at https://monica.{{ domain }}/ or http://monica.{{ domain }}/ It is also available via Tor at http://monica.{{ tor_domain }}/","title":"Access"},{"location":"software/nextcloud/","text":"NextCloud NextCloud is your Dropbox / Google Calendar replacement. Configuration When creating the admin account, expand the Storage Database tab, select MySQL/MariaDB , then fill out the following information. Database User: nextcloud Database Password: nextcloud Database Name: nextcloud Change localhost to nextcloud_db Hit Finish Setup Access It is available at https://nextcloud.{{ domain }}/ or http://nextcloud.{{ domain }}/ It is also available via Tor at http://nextcloud.{{ tor_domain }}/","title":"NextCloud"},{"location":"software/nextcloud/#nextcloud","text":"NextCloud is your Dropbox / Google Calendar replacement.","title":"NextCloud"},{"location":"software/nextcloud/#configuration","text":"When creating the admin account, expand the Storage Database tab, select MySQL/MariaDB , then fill out the following information. Database User: nextcloud Database Password: nextcloud Database Name: nextcloud Change localhost to nextcloud_db Hit Finish Setup","title":"Configuration"},{"location":"software/nextcloud/#access","text":"It is available at https://nextcloud.{{ domain }}/ or http://nextcloud.{{ domain }}/ It is also available via Tor at http://nextcloud.{{ tor_domain }}/","title":"Access"},{"location":"software/paperless/","text":"Paperless Paperless is a document management server. Point it at a folder on your NAS that your scanner is set to scan to, scan all your paper docs, have a searchable secure document archive. Access It is available at https://paperless.{{ domain }}/ or http://paperless.{{ domain }}/ It is also available via Tor at http://paperless.{{ tor_domain }}/","title":"Paperless"},{"location":"software/paperless/#paperless","text":"Paperless is a document management server. Point it at a folder on your NAS that your scanner is set to scan to, scan all your paper docs, have a searchable secure document archive.","title":"Paperless"},{"location":"software/paperless/#access","text":"It is available at https://paperless.{{ domain }}/ or http://paperless.{{ domain }}/ It is also available via Tor at http://paperless.{{ tor_domain }}/","title":"Access"},{"location":"software/pihole/","text":"Pi-hole Pi-hole provides network-wide ad blocking via your own Linux hardware. Configuration Login with the default password you set. Access The dashboard is available at https://pihole.{{ domain }}/ or http://pihole.{{ domain }}/ It is also available via Tor at http://pihole.{{ tor_domain }}/","title":"Pi-hole"},{"location":"software/pihole/#pi-hole","text":"Pi-hole provides network-wide ad blocking via your own Linux hardware.","title":"Pi-hole"},{"location":"software/pihole/#configuration","text":"Login with the default password you set.","title":"Configuration"},{"location":"software/pihole/#access","text":"The dashboard is available at https://pihole.{{ domain }}/ or http://pihole.{{ domain }}/ It is also available via Tor at http://pihole.{{ tor_domain }}/","title":"Access"},{"location":"software/portainer/","text":"Portainer Portainer is a Docker management interface, for the more advanced user. Access It is available at https://docker.{{ domain }}/ or http://docker.{{ domain }}/ It is also available via Tor at http://docker.{{ tor_domain }}/","title":"Portainer"},{"location":"software/portainer/#portainer","text":"Portainer is a Docker management interface, for the more advanced user.","title":"Portainer"},{"location":"software/portainer/#access","text":"It is available at https://docker.{{ domain }}/ or http://docker.{{ domain }}/ It is also available via Tor at http://docker.{{ tor_domain }}/","title":"Access"},{"location":"software/radarr-sonarr/","text":"Radarr / Sonarr Radarr (Automated movie downloading) and Sonarr (Automated TV downloading) work esentially the same, so the documentation below applies to both. Configuration To make either Sonarr or Radarr work, you need to configure an Indexer and a Downlad Client. The Indexer will be Jackett . Configure Jackett first, once that is done, in either Sonarr or Radarr, go to Settings then the Indexers tab, and click the Plus button. Select the Custom button undernear Torznab and enter Jackett for the name, for the URL enter http://jackett:9117/api/v2.0/indexers/all/results/torznab/ and for the API Key, enter the API key that Jackett displays on it's Dashboard. Next go to the Download Client tab, toggle the Advanced Settings toggle in the top right to Shown , then click the Plus button, select Transmission . Enter transmission for host, 9091 for port, and your transmission username and password in their respective fields. In Sonarr, enter /tv under Directory and in Radarr enter /movies . This points to the same folders Emby reads from, so they should be automatically detected by Emby if you set this up correctly. Now if you add some content, either a movie to Radarr or a TV series to Sonarr, they will automatically be searched and downloaded according to your settings. Access Sonarr available at https://sonarr.{{ domain }}/ or http://sonarr.{{ domain }}/ It is also available via Tor at http://sonarr.{{ tor_domain }}/ Radarr available at https://radarr.{{ domain }}/ or http://radarr.{{ domain }}/ It is also available via Tor at http://radarr.{{ tor_domain }}/","title":"Radarr / Sonarr"},{"location":"software/radarr-sonarr/#radarr-sonarr","text":"Radarr (Automated movie downloading) and Sonarr (Automated TV downloading) work esentially the same, so the documentation below applies to both.","title":"Radarr / Sonarr"},{"location":"software/radarr-sonarr/#configuration","text":"To make either Sonarr or Radarr work, you need to configure an Indexer and a Downlad Client. The Indexer will be Jackett . Configure Jackett first, once that is done, in either Sonarr or Radarr, go to Settings then the Indexers tab, and click the Plus button. Select the Custom button undernear Torznab and enter Jackett for the name, for the URL enter http://jackett:9117/api/v2.0/indexers/all/results/torznab/ and for the API Key, enter the API key that Jackett displays on it's Dashboard. Next go to the Download Client tab, toggle the Advanced Settings toggle in the top right to Shown , then click the Plus button, select Transmission . Enter transmission for host, 9091 for port, and your transmission username and password in their respective fields. In Sonarr, enter /tv under Directory and in Radarr enter /movies . This points to the same folders Emby reads from, so they should be automatically detected by Emby if you set this up correctly. Now if you add some content, either a movie to Radarr or a TV series to Sonarr, they will automatically be searched and downloaded according to your settings.","title":"Configuration"},{"location":"software/radarr-sonarr/#access","text":"Sonarr available at https://sonarr.{{ domain }}/ or http://sonarr.{{ domain }}/ It is also available via Tor at http://sonarr.{{ tor_domain }}/ Radarr available at https://radarr.{{ domain }}/ or http://radarr.{{ domain }}/ It is also available via Tor at http://radarr.{{ tor_domain }}/","title":"Access"},{"location":"software/syncthing/","text":"Synchthing Synchthing is a powerful file synchronization tool. NextCloud can also do this, but Syncthing is nicer to work with servers and other people. Access It is available at https://sync.{{ domain }}/ or http://sync.{{ domain }}/ It is also available via Tor at http://sync.{{ tor_domain }}/","title":"Synchthing"},{"location":"software/syncthing/#synchthing","text":"Synchthing is a powerful file synchronization tool. NextCloud can also do this, but Syncthing is nicer to work with servers and other people.","title":"Synchthing"},{"location":"software/syncthing/#access","text":"It is available at https://sync.{{ domain }}/ or http://sync.{{ domain }}/ It is also available via Tor at http://sync.{{ tor_domain }}/","title":"Access"},{"location":"software/thelounge/","text":"TheLounge TheLounge is a web based IRC client that syncs nicely across devices, and stays online when you aren't. Configuration To turn TheLounge from a public instance to a private (highly recommended) run the following commands on your server. Run sed -i 's/public: true/public: false/' /var/homelabos/thelounge/config.js , then restart the container with docker restart homelabos_thelounge_1 , then create a user with docker exec -it homelabos_thelounge_1 thelounge add username and follow the prompts. Now you should be able to login with the username and password you created at the URLs below, and have your session automatically sync between multiple devices. Access The dashboard is available at https://thelounge.{{ domain }}/ or http://thelounge.{{ domain }}/ It is also available via Tor at http://thelounge.{{ tor_domain }}/","title":"The Lounge"},{"location":"software/thelounge/#thelounge","text":"TheLounge is a web based IRC client that syncs nicely across devices, and stays online when you aren't.","title":"TheLounge"},{"location":"software/thelounge/#configuration","text":"To turn TheLounge from a public instance to a private (highly recommended) run the following commands on your server. Run sed -i 's/public: true/public: false/' /var/homelabos/thelounge/config.js , then restart the container with docker restart homelabos_thelounge_1 , then create a user with docker exec -it homelabos_thelounge_1 thelounge add username and follow the prompts. Now you should be able to login with the username and password you created at the URLs below, and have your session automatically sync between multiple devices.","title":"Configuration"},{"location":"software/thelounge/#access","text":"The dashboard is available at https://thelounge.{{ domain }}/ or http://thelounge.{{ domain }}/ It is also available via Tor at http://thelounge.{{ tor_domain }}/","title":"Access"},{"location":"software/transmission/","text":"Transmission Transmission is available for all your torrenting needs. HomelabOS uses docker-transmission-openvpn to only connect via a VPN. It includes Tinyproxy on port 8888 to provide proxy services over the OpenVPN client connection. To disable the OpenVPN functionality replace the line image: haugene/transmission-openvpn with image: linuxserver/transmission in homelabos/templates/docker-compose.yml then run make again from the root directory to update HomelabOS with your new settings. Access It is available at https://torrent.{{ domain }}/ or http://torrent.{{ domain }}/ It is also available via Tor at http://torrent.{{ tor_domain }}/","title":"Transmission"},{"location":"software/transmission/#transmission","text":"Transmission is available for all your torrenting needs. HomelabOS uses docker-transmission-openvpn to only connect via a VPN. It includes Tinyproxy on port 8888 to provide proxy services over the OpenVPN client connection. To disable the OpenVPN functionality replace the line image: haugene/transmission-openvpn with image: linuxserver/transmission in homelabos/templates/docker-compose.yml then run make again from the root directory to update HomelabOS with your new settings.","title":"Transmission"},{"location":"software/transmission/#access","text":"It is available at https://torrent.{{ domain }}/ or http://torrent.{{ domain }}/ It is also available via Tor at http://torrent.{{ tor_domain }}/","title":"Access"}]}