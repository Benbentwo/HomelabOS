---
version: '3'

networks:
  traefik_network:
    external:
      name: homelabos_traefik

services:
  # Drone is a self-service continuous delivery platform
  drone-server:
    image: drone/drone:1.0
    restart: unless-stopped
    volumes:
      - "{{ volumes_root }}/drone/data:/data"
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik_network
    environment:
      - DRONE_GITEA_SERVER=https://gitea.{{ domain }}
      - DRONE_GIT_ALWAYS_AUTH=true
      - DRONE_RUNNER_CAPACITY=1
      - DRONE_SERVER_PROTO=https
      - DRONE_SERVER_HOST={% if drone.domain %}{{ drone.domain }}{% else %}{{ drone.subdomain + "." + domain }}{% endif %}
      - DRONE_TLS_AUTOCERT=false
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelabos_traefik"
      - "traefik.http.services.drone.loadbalancer.server.scheme=http"
      - "traefik.http.services.drone.loadbalancer.server.port=80"
      - "traefik.http.routers.drone-http.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.drone-http.entrypoints=http"
      - "traefik.http.routers.drone-http.middlewares={% if drone.https_only %}redirect@file, security-headers@file, {% else %}{% if drone.auth %}{% if authelia.enable %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}{% endif %}customFrameHomelab@file"
      - "traefik.http.routers.drone.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.drone.entrypoints=https"
      - "traefik.http.routers.drone.middlewares={% if drone.auth %}{% if authelia.enable %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameHomelab@file"
      - "traefik.http.routers.drone.tls=true"
{% if traefik.dns_challenge_provider %}
      - "traefik.http.routers.drone.tls.certresolver=dns"
      - "traefik.http.routers.drone.tls.domains[0].main={{ domain }}"
      - "traefik.http.routers.drone.tls.domains[0].sans=*.{{ domain }}"
{% else %}
      - "traefik.http.routers.drone.tls.certresolver=http"
{% endif %}
{% if enable_tor %}
      - "traefik.http.routers.drone-tor-http.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.drone-tor-http.entrypoints=http"
      - "traefik.http.routers.drone-tor-http.middlewares={% if drone.auth %}{% if authelia.enable %}authelia-tor@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameHomelab-tor@file"
{% endif %}

  drone-agent:
    image: drone/agent:1.0
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik_network
    environment:
      - DRONE_SERVER=drone-server:9000
      - DRONE_SECRET="{{lookup('password', './settings/passwords/drone_secret chars=digits')}}"
      - DRONE_MAX_PROCS=1
    labels:
      - "traefik.enable=false"
