---
version: '3'

# This networks section required for the package to be visible to Traefik.
# DO NOT Remove
networks:
  traefik_network:
    external:
      name: homelabos_traefik
  default:

services:

  zammad-backup:
    command: ["zammad-backup"]
    depends_on:
      - zammad-railsserver
    entrypoint: /usr/local/bin/backup.sh
    environment:
      - BACKUP_SLEEP=86400
      - HOLD_DAYS=10
      - POSTGRESQL_USER=zammad
      - "POSTGRESQL_PASSWORD={{lookup('password', './settings/passwords/zammad_db_password')}}"
    image: zammad/zammad-docker-compose:zammad-postgresql-3.3.0-19
    links:
      - zammad-postgresql
    networks:
      - default
    restart: unless-stopped
    volumes:
      - "{{ volumes_root }}/zammad/zammad-backup:/var/tmp/zammad"
      - "{{ volumes_root }}/zammad/zammad-data:/opt/zammad"

  zammad-elasticsearch:
    environment:
      - discovery.type=single-node
    image: zammad/zammad-docker-compose:zammad-elasticsearch-3.3.0-19
    restart: unless-stopped
    networks:
      - default
    volumes:
      - "{{ volumes_root }}/zammad/elasticsearch-data:/usr/share/elasticsearch/data"

  zammad-init:
    command: ["zammad-init"]
    depends_on:
      - zammad-postgresql
    environment:
      - POSTGRESQL_USER=zammad
      - "POSTGRESQL_PASS={{lookup('password', './settings/passwords/zammad_db_password')}}"
    image: zammad/zammad-docker-compose:zammad-3.3.0-19
    links:
      - zammad-elasticsearch
      - zammad-postgresql
    networks:
      - default
    restart: on-failure
    volumes:
      - "{{ volumes_root }}/zammad/zammad-data:/opt/zammad"

  zammad-memcached:
    command: memcached -m 256M
    image: memcached:1.5.22-alpine
    restart: unless-stopped
    networks:
      - default

  zammad-nginx:
    command: ["zammad-nginx"]
    depends_on:
      - zammad-railsserver
    image: zammad/zammad-docker-compose:zammad-3.3.0-19
    links:
      - zammad-railsserver
      - zammad-websocket
    restart: unless-stopped
    volumes:
      - "{{ volumes_root }}/zammad/zammad-data:/opt/zammad"
    networks:
      - traefik_network
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelabos_traefik"
      - "traefik.http.services.zammad.loadbalancer.server.scheme=http"
      - "traefik.http.services.zammad.loadbalancer.server.port=80"
      - "traefik.http.routers.zammad-http.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.zammad-http.entrypoints=http"
      - "traefik.http.routers.zammad-http.middlewares={% if zammad.https_only %}redirect@file, security-headers@file, {% else %}{% if zammad.auth %}{% if authelia.enable %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}{% endif %}customFrameHomelab@file"
      - "traefik.http.routers.zammad.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.zammad.entrypoints=https"
      - "traefik.http.routers.zammad.middlewares={% if zammad.auth %}{% if authelia.enable %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameHomelab@file"
      - "traefik.http.routers.zammad.tls=true"
{% if traefik.dns_challenge_provider %}
      - "traefik.http.routers.zammad.tls.certresolver=dns"
      - "traefik.http.routers.zammad.tls.domains[0].main={{ domain }}"
      - "traefik.http.routers.zammad.tls.domains[0].sans=*.{{ domain }}"
{% else %}
      - "traefik.http.routers.zammad.tls.certresolver=http"
{% endif %}
{% if enable_tor %}
      - "traefik.http.routers.zammad-tor-http.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.zammad-tor-http.entrypoints=http"
      - "traefik.http.routers.zammad-tor-http.middlewares={% if zammad.auth %}{% if authelia.enable %}authelia-tor@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameHomelab-tor@file"
{% endif %}

  zammad-postgresql:
    environment:
      - POSTGRES_USER=zammad
      - "POSTGRES_PASSWORD={{lookup('password', './settings/passwords/zammad_db_password')}}"
    image: zammad/zammad-docker-compose:zammad-postgresql-3.3.0-19
    restart: unless-stopped
    networks:
      - default
    volumes:
      - "{{ volumes_root }}/zammad/postgresql-data:/var/lib/postgresql/data"

  zammad-railsserver:
    command: ["zammad-railsserver"]
    depends_on:
      - zammad-memcached
      - zammad-postgresql
    image: zammad/zammad-docker-compose:zammad-3.3.0-19
    links:
      - zammad-elasticsearch
      - zammad-memcached
      - zammad-postgresql
    networks:
      - default
    restart: unless-stopped
    volumes:
      - "{{ volumes_root }}/zammad/zammad-data:/opt/zammad"

  zammad-scheduler:
    command: ["zammad-scheduler"]
    depends_on:
      - zammad-memcached
      - zammad-railsserver
    image: zammad/zammad-docker-compose:zammad-3.3.0-19
    links:
      - zammad-elasticsearch
      - zammad-memcached
      - zammad-postgresql
    networks:
      - default
    restart: unless-stopped
    volumes:
      - "{{ volumes_root }}/zammad/zammad-data:/opt/zammad"

  zammad-websocket:
    command: ["zammad-websocket"]
    depends_on:
      - zammad-memcached
      - zammad-railsserver
    image: zammad/zammad-docker-compose:zammad-3.3.0-19
    links:
      - zammad-postgresql
      - zammad-memcached
    networks:
      - default
    restart: unless-stopped
    volumes:
      - "{{ volumes_root }}/zammad/zammad-data:/opt/zammad"
