---
version: '3'

# This networks section required for the package to be visible to Traefik.
# DO NOT Remove
networks:
  traefik_network:
    external:
      name: homelabos_traefik
  mail_network:
    external: false

services:
  # External dependencies
  redis:
    image: redis:{{ mailu.redis_version }}
    restart: unless-stopped
    volumes:
      - "{{ volumes_root }}/mailu/redis:/data"
    networks:
      - mail_network

  # Core services
  front:
    image: mailu/nginx:{{ mailu.version }}
    restart: unless-stopped
    env_file: .env
    logging:
      driver: json-file
    ports:
      - "25:25"    #SMTP (mail server to mail server communication)
      - "587:587"  #SMTP-MSA (Simple Mail Transfer Protocol - Message Submission Agent)
{% if mailu.enable_secure_imap %}
      - "993:993"  #IMAPS (Secure)
{% endif %}
{% if mailu.enable_secure_pop3 %}
      - "995:995"  #POP3S (Secure)
{% endif %}  
{% if mailu.enable_legacy_smtps %}
      - "465:465" #SMTPS (Non-standard port... legacy)
{% endif %}
{% if mailu.enable_unsecure_pop3 %}
      - "110:110" #POP3
{% endif %}
{% if mailu.enable_unsecure_imap %}
     - "143:143" #IMAP
{% endif %}
    volumes:
      - "{{ volumes_root }}/mailu/certs:/certs"
      - "{{ volumes_root }}/mailu/overrides/nginx:/overrides"
    networks:
      - traefik_network
      - mail_network
    labels:
      - "traefik.http.services.mailu.loadbalancer.server.scheme=http"
      - "traefik.http.services.mailu.loadbalancer.server.port=80"
{% include './labels.j2' %}
      
      # Default minimum routes needed for email to work 
      # 25 (unsecure SMTP) and 587 (secure SMTP)
      - "traefik.tcp.routers.mailu_smtp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mailu_smtp.entrypoints=smtp"
      - "traefik.tcp.routers.mailu_smtp.service=mailu_smtp"
      - "traefik.tcp.services.mailu_smtp.loadbalancer.server.port=25"

      - "traefik.tcp.routers.mailu_smtp_msa.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mailu_smtp_msa.entrypoints=smtp-msa"
      - "traefik.tcp.routers.mailu_smtp_msa.tls.passthrough=true"
      - "traefik.tcp.routers.mailu_smtp_msa.service=mailu_smtp_msa"
      - "traefik.tcp.services.mailu_smtp_msa.loadbalancer.server.port=587"
{% if mailu.enable_secure_imap %}
      - "traefik.tcp.routers.mailu_imaps.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mailu_imaps.entrypoints=imaps"
      - "traefik.tcp.routers.mailu_imaps.tls.passthrough=true"
      - "traefik.tcp.routers.mailu_imaps.service=mailu_imaps"
      - "traefik.tcp.services.mailu_imaps.loadbalancer.server.port=993"
{% endif %}
{% if mailu.enable_secure_pop3 %}
      - "traefik.tcp.routers.mailu_pop3s.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mailu_pop3s.entrypoints=pop3s"
      - "traefik.tcp.routers.mailu_pop3s.tls.passthrough=true"
      - "traefik.tcp.routers.mailu_pop3s.service=mailu_pop3s"
      - "traefik.tcp.services.mailu_pop3s.loadbalancer.server.port=995"
{% endif %}
{% if mailu.enable_legacy_smtps %}
      # Optional nonstandard legacy smtps
      - "traefik.tcp.routers.mailu_smtps.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mailu_smtps.entrypoints=smtps"
      - "traefik.tcp.routers.mailu_smtps.tls.passthrough=true"
      - "traefik.tcp.routers.mailu_smtps.service=mailu_smts"
      - "traefik.tcp.services.mailu_smtps.loadbalancer.server.port=465"
{% endif %}
{% if mailu.enable_unsecure_pop3 %}
      # Optional unsecure pop3
      - "traefik.tcp.routers.mailu_pop3.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mailu_pop3.entrypoints=pop3"
      - "traefik.tcp.routers.mailu_pop3.service=mailu_pop3"
      - "traefik.tcp.services.mailu_pop3.loadbalancer.server.port=110"
{% endif %}
{% if mailu.enable_unsecure_imap %}
      - "traefik.tcp.routers.mailu_imap.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mailu_imap.entrypoints=imap"
      - "traefik.tcp.routers.mailu_imap.service=mailu_imap"
      - "traefik.tcp.services.mailu_imap.loadbalancer.server.port=143"
{% endif %}

  admin:
    image: mailu/admin:{{ mailu.version }}
    restart: unless-stopped
    env_file: .env
    volumes:
      - "{{ volumes_root }}/mailu/data:/data"
      - "{{ volumes_root }}/mailu/dkim:/dkim"
    depends_on:
      - redis
    networks:
      - mail_network

  imap:
    image: mailu/dovecot:{{ mailu.version }}
    restart: unless-stopped
    env_file: .env
    volumes:
      - "{{ volumes_root }}/mailu/mail:/mail"
      - "{{ volumes_root }}/mailu/overrides:/overrides"
    networks:
      - mail_network
    depends_on:
      - front

  smtp:
    image: mailu/postfix:{{ mailu.version }}
    restart: unless-stopped
    env_file: .env
    volumes:
      - "{{ volumes_root }}/mailu/overrides:/overrides"
    networks:
      - mail_network
    depends_on:
      - front

  antispam:
    image: mailu/rspamd:{{ mailu.version }}
    restart: unless-stopped
    env_file: .env
    volumes:
      - "{{ volumes_root }}/mailu/filter:/var/lib/rspamd"
      - "{{ volumes_root }}/mailu/dkim:/dkim"
      - "{{ volumes_root }}/mailu/overrides/rspamd:/etc/rspamd/override.d"
    networks:
      - mail_network
    depends_on:
      - front

  # Optional services
  antivirus:
    image: mailu/clamav:{{ mailu.version }}
    restart: unless-stopped
    env_file: .env
    volumes:
      - "{{ volumes_root }}/mailu/filter:/data"
    networks:
      - mail_network

  webdav:
    image: mailu/radicale:{{ mailu.version }}
    restart: unless-stopped
    env_file: .env
    volumes:
      - "{{ volumes_root }}/mailu/dav:/data"
    networks:
      - mail_network

  certdumper:
    restart: unless-stopped
    image: mailu/traefik-certdumper:{{mailu.certdumper_version}} #Need latest as it supports the TRAEFIK_VERSION command
    environment:
      - TRAEFIK_VERSION=v2
      - DOMAIN={{ service_domain }}
    volumes:
      # Folder, which contains the acme.json
      - "{{ volumes_root}}/traefik:/traefik"
      # Folder, where cert.pem and key.pem will be written
      - "{{ volumes_root }}/mailu/certs:/output"

  # Webmail
  webmail:
    image: mailu/rainloop:{{ mailu.version }}
    restart: always
    env_file: .env
    volumes:
      - "{{ volumes_root }}/mailu/webmail:/data"
    depends_on:
      - imap
    networks:
      - mail_network
      
  # Fetchmail    
  fetchmail:
    image: mailu/fetchmail:1.8
    restart: unless-stopped
    env_file: .env
    volumes:
      - "{{ volumes_root }}/mailu/fetch:/data"
    networks:
      - mail_network
#Checking
