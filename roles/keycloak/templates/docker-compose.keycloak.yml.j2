---
version: '3'

# This networks section required for the package to be visible to Traefik.
# DO NOT Remove
networks:
  traefik_network:
    external:
      name: homelabos_traefik
  keycloak:

services:
  keycloak-postgres:
    image: 'postgres:alpine'
    volumes:
      - "{{ volumes_root }}/keycloak/db-data:/var/lib/postgresql/data"
    restart: 'unless-stopped'
    # ports:
    #   - 5432:5432
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: {{lookup('password', './settings/passwords/keycloak_db_password chars=ascii_letters')}}
      POSTGRES_DB: keycloak
      POSTGRES_HOST: keycloak-postgres
    networks:
        - keycloak

  keycloak:
      image: quay.io/keycloak/keycloak:latest
      restart: unless-stopped
      environment:
        DB_VENDOR: postgres
        DB_ADDR: keycloak-postgres
        DB_PORT: 5432
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_PASSWORD: {{lookup('password', './settings/passwords/keycloak_db_password chars=ascii_letters')}}
        KEYCLOAK_USER: {{ default_username }}
        KEYCLOAK_PASSWORD: {{ default_password }}
        PROXY_ADDRESS_FORWARDING: "true"
        KEYCLOAK_STATISTICS: all
        KEYCLOAK_FRONTEND_URL: "https://{{ service_domain }}/auth/"
        KEYCLOAK_LOGLEVEL: INFO # Supported log levels are ALL, DEBUG, ERROR, FATAL, INFO, OFF, TRACE and WARN.
        ROOT_LOGLEVEL: INFO # Supported log levels are ALL, DEBUG, ERROR, FATAL, INFO, OFF, TRACE and WARN.
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the MySQL JDBC driver documentation in order to use it.
        #JDBC_PARAMS: "connectTimeout=30000"
        JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
        JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500
      depends_on:
        - keycloak-postgres
      networks:
        - keycloak
        - traefik_network
      labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelabos_traefik"
      - "traefik.http.services.keycloak.loadbalancer.server.scheme=http"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
      - "traefik.http.routers.keycloak-http.service=keycloak"
      - "traefik.http.routers.keycloak-http.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.keycloak-http.entrypoints=http"
      - "traefik.http.routers.keycloak-http.middlewares={% if keycloak.https_only %}redirect@file, {% else %}{% if keycloak.auth %}{% if authelia.enable %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}{% endif %}customFrameHomelab@file"
      - "traefik.http.routers.keycloak.rule=Host(`{{ service_domain }}`)"
      - "traefik.http.routers.keycloak.service=keycloak"
      - "traefik.http.routers.keycloak.entrypoints=https"
      - "traefik.http.routers.keycloak.middlewares={% if keycloak.auth %}{% if authelia.enable %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameHomelab@file"
      - "traefik.http.routers.keycloak.tls=true"
{% if traefik.dns_challenge_provider %}
      - "traefik.http.routers.keycloak.tls.certresolver=dns"
      - "traefik.http.routers.keycloak.tls.domains[0].main={{ service_domain }}"
{% else %}
      - "traefik.http.routers.keycloak.tls.certresolver=http"
{% endif %}
{% if enable_tor %}
      - "traefik.http.routers.keycloak-tor-http.rule=Host(`{{ lookup('vars', service_item).subdomain }}.{{ tor_domain }}`)"
      - "traefik.http.routers.keycloak-tor-http.entrypoints=http"
      - "traefik.http.routers.keycloak-tor-http.middlewares={% if keycloak.auth %}{% if authelia.enable %}authelia-tor@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameHomelab-tor@file"
{% endif %}
