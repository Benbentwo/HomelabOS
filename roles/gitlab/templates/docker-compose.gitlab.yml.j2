---
version: '3'

networks:
  traefik_network:
    external:
      name: homelabos_traefik
  gitlab:

services:
  gitlab:
    restart: unless-stopped
    image: gitlab/gitlab-ce:{{ gitlab.version }}
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://gitlab.{{ domain }}'
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        gitlab_rails['gitlab_shell_ssh_port'] = {{ gitlab.ssh_port }}
{% if gitlab.aws_lfs_enabled %}
        gitlab_rails['lfs_enabled'] = true
        gitlab_rails['lfs_object_store_enabled'] = true
        gitlab_rails['lfs_object_store_remote_directory'] = "{{ gitlab.aws_lfs_bucket }}"
        gitlab_rails['lfs_object_store_connection'] = {
          'provider' => 'AWS',
          'region' => '{{ aws.region }}',
          'aws_access_key_id' => '{{ aws.access_key }}',
          'aws_secret_access_key' => '{{ aws.secret_key }}'
        }
        gitlab_rails['lfs_object_store_connection'] = {
          'provider' => 'AWS',
          'region' => '{{ aws.region }}',
          'aws_access_key_id' => '{{ aws.access_key }}',
          'aws_secret_access_key' => '{{ aws.secret_key }}'
        }
{% endif %}
{% if gitlab.aws_storage_enabled %}
        registry['storage'] = {
          's3' => {
            'bucket' => '{{ gitlab.aws_storage_bucket }}',
            'region' => '{{ aws.region }}',
            'aws_access_key_id' => '{{ aws.access_key }}',
            'aws_secret_access_key' => '{{ aws.secret_key }}'
          }
        }
        registry['storagedriver_health_enabled'] = false
        gitlab_rails['artifacts_enabled'] = true
        gitlab_rails['artifacts_object_store_enabled'] = true
        gitlab_rails['artifacts_object_store_remote_directory'] = "{{ gitlab.aws_storage_bucket }}"
        gitlab_rails['artifacts_object_store_connection'] = {
          'provider' => 'AWS',
          'region' => '{{ aws.region }}',
          'aws_access_key_id' => '{{ aws.access_key }}',
          'aws_secret_access_key' => '{{ aws.secret_key }}'
        }
{% endif %}
{% if gitlab.aws_backup_enabled %}
        # https://docs.gitlab.com/ee/raketasks/backup_restore.html#using-amazon-s3
        gitlab_rails['backup_upload_connection'] = {
          'provider' => 'AWS',
          'region' => '{{ aws.region }}',
          'aws_access_key_id' => '{{ aws.access_key }}',
          'aws_secret_access_key' => '{{ aws.secret_key }}'
        }
        gitlab_rails['backup_upload_remote_directory'] = '{{ aws_backup_bucket }}'
        gitlab_rails['backup_storage_class'] = 'STANDARD_IA'
        gitlab_rails['env'] = {
          "SKIP" => "db,uploads,artifacts,lfs"
        }
{% endif %}
        gitlab_rails['initial_root_password'] = '{{ lookup('password', './settings/passwords/gitlab_root_password chars=ascii_letters') }}'
        gitlab_rails['initial_shared_runners_registration_token'] = '{{ lookup('password', './settings/passwords/gitlab_runners_token chars=ascii_letters') }}'
        gitlab_rails['auto_migrate'] = true
        gitlab_rails['registry_enabled'] = true
        gitlab_rails['registry_host'] = "https://registry.{{ domain }}"
        gitlab_rails['registry_port'] = 5782
        gitlab_rails['registry_api_url'] = "http://registry:5000"
        gitlab_rails['registry_key_path'] = "/certs/registry.pem"
        gitlab_rails['registry_issuer'] = "gitlab.{{ domain }}"
        registry['enable'] = false
        gitlab_rails['time_zone'] = '{{ common_timezone }}'
        gitlab_rails['gitlab_default_theme'] = 7
        gitlab_rails['usage_ping_enabled'] = false
        postgresql['enable'] = false
        gitlab_rails['db_host'] = 'gitlab_db'
        gitlab_rails['db_port'] = '5432'
        gitlab_rails['db_username'] = 'gitlab_user'
        gitlab_rails['db_password'] = '{{ lookup('password', './settings/passwords/gitlab_db_password chars=ascii_letters') }}'
        gitlab_rails['db_database'] = 'gitlab_db'
        gitlab_rails['db_adapter'] = 'postgresql'
        gitlab_rails['db_encoding'] = 'utf8'
        gitlab_rails['gitlab_email_enabled'] = true
        gitlab_rails['gitlab_email_from'] = 'gitlab@{{ domain }}'
        gitlab_rails['gitlab_email_display_name'] = 'gitlab.{{ domain }}'
        gitlab_rails['gitlab_email_reply_to'] = 'gitlab@{{ domain }}'
        gitlab_rails['gitlab_email_subject_suffix'] = ''
        registry_external_url 'https://gitlab.{{ domain }}:4567'
        registry_nginx['enable'] = true
        registry_nginx['listen_port'] = 4567
        registry_nginx['listen_https'] = false
        gitlab_rails['gitlab_default_projects_features_issues'] = true
        gitlab_rails['gitlab_default_projects_features_merge_requests'] = true
        gitlab_rails['gitlab_default_projects_features_wiki'] = true
        gitlab_rails['gitlab_default_projects_features_snippets'] = true
        gitlab_rails['gitlab_default_projects_features_builds'] = true
        gitlab_rails['gitlab_default_projects_features_container_registry'] = false
        letsencrypt['enable'] = false
    networks:
      - traefik_network
      - gitlab
    depends_on:
      - gitlab_db
    volumes:
      - "{{ volumes_root }}/gitlab/config:/etc/gitlab"
      - "{{ volumes_root }}/gitlab/logs:/var/log/gitlab"
      - "{{ volumes_root }}/gitlab/data:/var/opt/gitlab"
      - "{{ volumes_root }}/gitlab/certs:/certs"
      - "{{ volumes_root }}/gitlab/backups:/var/opt/gitlab/backups"
    ports:
      - "{{ gitlab.ssh_port }}:22"
    labels:
      - "traefik.http.services.gitlab.loadbalancer.server.scheme=http"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
{% include './labels.j2' %}

  gitlab-runner:
    image: gitlab/gitlab-runner:{{ gitlab.runner_version }}
    command: register -n --locked=false --url "http://gitlab/" --registration-token "{{ lookup('password', './settings/passwords/gitlab_runners_token chars=ascii_letters') }}" --clone-url http://gitlab --executor "docker" --docker-image "docker:latest" --docker-privileged --description "docker-runner" --tag-list "docker" --run-untagged="true" --locked="false" --access-level="not_protected"
    deploy:
      mode: replicated
      replicas: 4
    restart: unless-stopped
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "{{ volumes_root }}/gitlab/gitlab-runner/config:/etc/gitlab-runner"
    networks:
      - gitlab
    depends_on:
      - gitlab

  gitlab_db:
    image: postgres:{{ gitlab.db_version }}
    restart: unless-stopped
    networks:
      - gitlab
    environment:
      - POSTGRES_DB=gitlab_db
      - POSTGRES_PASSWORD={{ lookup('password', './settings/passwords/gitlab_db_password chars=ascii_letters') }}
      - POSTGRES_USER=gitlab_user
      - PGDATA=/database
    volumes:
      - "{{ volumes_root }}/gitlab/db:/database"

  registry:
    image: registry:{{ gitlab.registry_version }}
    hostname: 'registry'
    restart: unless-stopped
    environment:
      - REGISTRY_HTTP_SECRET={{ lookup('password', './settings/passwords/gitlab_registry_secret chars=ascii_letters') }}
      - REGISTRY_LOG_LEVEL=info
      - REGISTRY_AUTH_TOKEN_REALM=https://gitlab.{{ domain }}/jwt/auth
      - REGISTRY_AUTH_TOKEN_SERVICE=container_registry
      - REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer
      - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/registry.crt
{% if gitlab.aws_registry_enabled %}
      - REGISTRY_STORAGE=s3
      - REGISTRY_STORAGE_S3_REGION={{ aws.region }}
      - REGISTRY_STORAGE_S3_ACCESSKEY={{ aws.access_key }}
      - REGISTRY_STORAGE_S3_SECRETKEY={{ aws.secret_key }}
      - REGISTRY_STORAGE_S3_BUCKET={{ gitlab.aws_registry_bucket }}
{% else %}
      - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry
{% endif %}
      - REGISTRY_STORAGE_DELETE_ENABLED=true
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelabos_traefik"
      - "traefik.http.services.registry.loadbalancer.server.scheme=http"
      - "traefik.http.services.registry.loadbalancer.server.port=80"
      - "traefik.http.routers.registry-http.rule=Host(`{% if gitlab.registry.domain %}{{ gitlab.registry.domain }}{% else %}{{ gitlab.registry.subdomain + "." + domain }}{% endif %}`)"
      - "traefik.http.routers.registry-http.entrypoints=http"
{% if not gitlab.registry.https_only %}
      - "traefik.http.routers.registry-http.middlewares={% if gitlab.registry.https_only %}redirect@file, {% else %}{% if gitlab.registry.auth %}{% if authelia.enable %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}{% endif %}customFrameHomelab@file"
{% else %}
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.registry-http.middlewares=redirect-to-https"
{% endif %}
      - "traefik.http.routers.registry.rule=Host(`{% if gitlab.registry.domain %}{{ gitlab.registry.domain }}{% else %}{{ gitlab.registry.subdomain + "." + domain }}{% endif %}`)"
      - "traefik.http.routers.registry.entrypoints=https"
      - "traefik.http.routers.registry.middlewares={% if gitlab.registry.auth %}{% if authelia.enable %}authelia@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameHomelab@file"
      - "traefik.http.routers.registry.tls=true"
{% if traefik.dns_challenge_provider %}
      - "traefik.http.routers.registry.tls.certresolver=dns"
      - "traefik.http.routers.registry.tls.domains[0].main={{ domain }}"
      - "traefik.http.routers.registry.tls.domains[0].sans=*.{{ domain }}"
{% else %}
      - "traefik.http.routers.registry.tls.certresolver=http"
{% endif %}
{% if enable_tor %}
      - "traefik.http.routers.registry-tor-http.rule=Host(`{{ lookup('vars', service_item).subdomain }}.{{ tor_domain }}`)"
      - "traefik.http.routers.registry-tor-http.entrypoints=http"
      - "traefik.http.routers.registry-tor-http.middlewares={% if gitlab.registry.auth %}{% if authelia.enable %}authelia-tor@file{% else %}basicAuth@file{% endif %}, {% endif %}customFrameHomelab-tor@file"
{% endif %}
    volumes:
      - "{{ volumes_root }}/gitlab/certs:/certs"
      - "{{ volumes_root }}/gitlab/registry:/var/lib/registry"
    expose:
      - "5000"
    ports:
      - '5000:5000'
    networks:
      - gitlab
    depends_on:
      - gitlab-runner

#checking
